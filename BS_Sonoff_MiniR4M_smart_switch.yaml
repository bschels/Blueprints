blueprint:
  name: "Smart Relay Control (Sonoff Mini R4M mit SonoffLAN)"
  description: >
    Dieses Blueprint ermöglicht die Steuerung des Sonoff Mini R4M über die SonoffLAN-Integration.

    **Modi:**
    
    - **Detached Mode (Smarte Steuerung)**  
      - Schaltet eine **smarte Entität** (z. B. Licht, Schalter, Szene).  
      - **Single Tap:** Schaltet die Entität ein oder aus.  
      - **Double Tap:** Optional eine Szene starten.  
      - **Long Press:** Helligkeit anpassen (nur für Lichter).  
    
    - **Relay Mode (Direkte Relaissteuerung)**  
      - Der Taster toggelt direkt das interne Relais des Sonoff Mini R4M.

  domain: automation

  input:
    action_sensor:
      name: "Action Sensor"
      description: >
        Wähle den Sensor, der die Tastendrücke des Sonoff Mini R4M registriert.
      selector:
        entity:
          domain: sensor

    relay_mode:
      name: "Steuermodus"
      description: >
        Wähle den Modus:
          - **detached:** Smarte Steuerung eines Geräts oder einer Szene.
          - **relay:** Direkte Steuerung des Sonoff Mini R4M Relais.
      default: detached
      selector:
        select:
          options:
            - detached
            - relay

    target_entity:
      name: "Ziel-Entität (Smart Control)"
      description: >
        (Nur im 'detached' Modus) Wähle die Entität, die geschaltet werden soll.
      selector:
        entity: {}

    target_other:
      name: "Relais-Entität (Relay Mode)"
      description: >
        (Nur im 'relay' Modus) Wähle das Schaltelement des Sonoff Mini R4M.
      selector:
        entity:
          domain: switch
      default: ""

    double_tap_scene:
      name: "Szene für Doppeltipp"
      description: >
        (Nur im 'detached' Modus) Optional eine Szene auswählen, die bei Doppeltipp ausgelöst wird.
      selector:
        entity:
          domain: scene
      default: ""

    dimming_increment:
      name: "Dimm-Schrittweite"
      description: >
        (Nur im 'detached' Modus für Lichter) Helligkeitsveränderung bei langem Tastendruck.
      default: 20
      selector:
        number:
          min: 5
          max: 50
          unit_of_measurement: "%"

    dimming_direction:
      name: "Dimmrichtung"
      description: >
        (Nur im 'detached' Modus für Lichter) Soll die Helligkeit bei langem Tastendruck steigen oder sinken?
      default: up
      selector:
        select:
          options:
            - up
            - down

trigger:
  - platform: state
    entity_id: !input action_sensor
    to: "single"
  - platform: state
    entity_id: !input action_sensor
    to: "double"
  - platform: state
    entity_id: !input action_sensor
    to: "long"

condition: []

action:
  - variables:
      target_entity_value: !input target_entity
      relay_mode_value: !input relay_mode
      target_other_value: !input target_other
      double_tap_scene_value: !input double_tap_scene

  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ relay_mode_value == 'detached'
                 and trigger.to_state.state in ['single', 'double', 'long']
                 and target_entity_value is defined
                 and target_entity_value | string | length > 0 }}
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.state == 'single' }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ states(target_entity_value) == 'on' }}"
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: "{{ target_entity_value }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ states(target_entity_value) == 'off' }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ target_entity_value }}"
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.state == 'double' and double_tap_scene_value | string | length > 0 }}"
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: "{{ double_tap_scene_value }}"
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.state == 'long' and target_entity_value.startswith('light.') }}"
                sequence:
                  - variables:
                      current_brightness: "{{ state_attr(target_entity_value, 'brightness') | int | default(0) }}"
                      new_brightness: >
                        {% if dimming_direction == 'up' %}
                          {{ [current_brightness + dimming_increment, 255] | min }}
                        {% else %}
                          {{ [current_brightness - dimming_increment, 0] | max }}
                        {% endif %}
                  - service: light.turn_on
                    target:
                      entity_id: "{{ target_entity_value }}"
                    data:
                      brightness: "{{ new_brightness }}"

  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ relay_mode_value == 'relay'
                 and trigger.to_state.state in ['single', 'double']
                 and target_other_value is defined
                 and target_other_value | string | length > 0 }}
        sequence:
          - service: switch.toggle
            target:
              entity_id: "{{ target_other_value }}"

mode: restart
